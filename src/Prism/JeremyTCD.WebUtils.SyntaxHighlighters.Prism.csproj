<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <PackageId>JeremyTCD.WebUtils.SyntaxHighlighters.Prism</PackageId>
        <Authors>JeremyTCD</Authors>
        <Description>A .Net wrapper for the javascript syntax highlighting library, PrismJs.</Description>
        <Copyright>© JeremyTCD. All rights reserved.</Copyright>
        <PackageLicenseUrl>https://github.com/JeremyTCD/WebUtils.SyntaxHighlighters/blob/master/License.txt</PackageLicenseUrl>
        <PackageProjectUrl>https://github.com/JeremyTCD/WebUtils.SyntaxHighlighters</PackageProjectUrl>
        <PackageReleaseNotes>https://github.com/JeremyTCD/WebUtils.SyntaxHighlighters/blob/master/Changelog.md</PackageReleaseNotes>
        <PackageTags>web prism js syntax highlighter</PackageTags>
        <RepositoryUrl>https://github.com/JeremyTCD/WebUtils.SyntaxHighlighters</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
    </PropertyGroup>

    <PropertyGroup>
        <CodeAnalysisRuleSet>../../JeremyTCD.WebUtils.SyntaxHighlighters.ruleset</CodeAnalysisRuleSet>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.NodeServices" Version="2.1.0" />
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="2.1.0" />
        <PackageReference Include="Roslynator.Analyzers" Version="1.8.0" />
        <PackageReference Include="Roslynator.CodeFixes" Version="1.8.0" />
        <PackageReference Include="Yarn.MSBuild" Version="1.5.2" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="Node\bin\JeremyTCD.WebUtils.SyntaxHighlighters.Prism.bundle.js">
            <!-- Discards Node\bin file structure - https://github.com/Microsoft/msbuild/issues/2795 -->
            <Link>%(Filename)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <!-- This adds copyToOutput="true" to the files element in the nuspec generated for this project. copyToOutput="true" instructs consuming projects to copy this file
                 to the output directory on build - https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets#including-content-in-a-package -->
            <PackageCopyToOutput>true</PackageCopyToOutput>
            <!-- To avoid copying entire folder structure (Node\bin) to the output folder - https://docs.microsoft.com/en-us/nuget/reference/nuspec#using-the-contentfiles-element-for-content-files -->
            <PackagePath>contentFiles\any\any</PackagePath>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <Compile Update="Strings.Designer.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>Strings.resx</DependentUpon>
        </Compile>
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Update="Strings.resx">
            <Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>Strings.Designer.cs</LastGenOutput>
        </EmbeddedResource>
    </ItemGroup>

    <!-- Properties for YarnBuild -->
    <PropertyGroup>
        <YarnWorkingDir>./Node</YarnWorkingDir>
        <YarnBuildCommand>run build --mode=debug</YarnBuildCommand>
        <YarnBuildCommand Condition="'$(Configuration)' == 'Release'">run build --mode=release</YarnBuildCommand>
    </PropertyGroup>

    <!-- Run yarn install in case package.json has changed and user isn't using VS or has automatic npm package restore disabled. 
         This is similar to how nuget restore runs for every project on every build. -->
    <Target Name="YarnInstall" BeforeTargets="YarnBuild">
        <Yarn WorkingDirectory="./Node" Command="install" />
    </Target>

</Project>
